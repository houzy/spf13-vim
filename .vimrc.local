" local settings {
let mapleader = ","

set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,ucs-bom,chinese,taiwan,japan,korea,latin1
set fileformat=unix

set wrap

" set nospell
autocmd VimEnter,BufWinEnter,BufNewFile,BufRead,BufEnter,TabEnter * set nospell
autocmd VimEnter,BufWinEnter * set iskeyword-=.
autocmd VimEnter,BufWinEnter * set iskeyword-=#
autocmd VimEnter,BufWinEnter * set iskeyword+=_

set clipboard&                      " Reset option to its default value.
" set virtualedit=onemore in .vimrc " Allow for cursor beyond last character
set virtualedit&                    " Reset option to its default value.
" set whichwrap=b,s,h,l,<,>,[,] in .vimrc
set whichwrap-=h
set whichwrap-=l
" set t_Co=256                      " Enable 256 colors to stop the CSApprox warning and make xterm vim shine
set t_Co&

set autowrite                       " auto save before commands like :next and :make
set autoread                        " auto read file that has been changed on disk

"colorscheme ir_black
"colorscheme molokai
"colorscheme peaksea
colorscheme ron

set tags+=~/ctagsFile/systags

" jeffy-plugins
let g:jeffy_plugins_enable_colors = 0

" cscope
nmap <leader>ss :cs find s <C-R>=expand("<cword>")<cr><cr>
nmap <leader>sg :cs find g <C-R>=expand("<cword>")<cr><cr>
nmap <leader>sc :cs find c <C-R>=expand("<cword>")<cr><cr>
nmap <leader>st :cs find t <C-R>=expand("<cword>")<cr><cr>
nmap <leader>se :cs find e <C-R>=expand("<cword>")<cr><cr>
nmap <leader>sf :cs find f <C-R>=expand("<cfile>")<cr><cr>
nmap <leader>si :cs find i <C-R>=expand("<cfile>")<cr><cr>
nmap <leader>sd :cs find d <C-R>=expand("<cword>")<cr><cr>

UnBundle 'amirh/HTML-AutoCloseTag'
" remove coloresque because it is causing problems with iskeyword 
" (periods are not separating keywords)
"UnBundle 'gorodinskiy/vim-coloresque'

" vim orgmode: VimOrganizer
au! BufRead,BufWrite,BufWritePost,BufNewFile *.org 
au BufEnter *.org call org#SetOrgFileType()

" NrrwRgn
" open the narrowed window as a vertical split buffer
let g:nrrw_rgn_vert = 0
let g:nrrw_rgn_incr = 30

" pangloss/vim-javascript
au FileType html,javascript let g:javascript_enable_domhtmlcss = 1

" in Vim files (including .vimrc), you may not want pairing of "
" because it is the comment character. If you set a value for
" g:autoclose_vim_commentmode, the " character will not be paired
" if Vim considers the current buffer to be a Vim file.
let g:autoclose_vim_commentmode = 1

" emmet-vim To remap the default <C-Y> leader
let g:user_emmet_leader_key='<C-Z>'

" Haskellmode-vim
let g:haddock_browser="/usr/bin/firefox"

" python-syntax
let OPTION_NAME = 1
let python_highlight_all = 1

" ctrl+c default function: leave insert mode, similar to esc
vmap <C-C> "+y

" SnipMate
let g:snips_author = 'houzy <h-zy2008@hotmail.com>'
let g:snip_author  = "houzy"
let g:snip_mail    = "h-zy2008@hotmail.com"
let g:snip_company = ""

" syntastic
"let g:syntastic_check_on_open = 1
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_loc_list_height = 4
let g:syntastic_aggregate_errors = 1
let g:syntastic_enable_balloons = 1
let g:syntastic_mode_map = { 'passive_filetypes': ['scss', 'slim'] }
let g:syntastic_python_checkers = ['pyflakes', 'pylint']
let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']
"set statusline+=%{SyntasticStatuslineFlag()}
"let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
"let g:syntastic_enable_highlighting = 0
"let g:syntastic_cpp_include_dirs = ['/usr/include/']
"let g:syntastic_cpp_remove_include_errors = 1
"let g:syntastic_cpp_check_header = 1
"let g:syntastic_cpp_compiler = 'clang++'
"let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libstdc++'

" YouCompleteMe
"let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
"let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_confirm_extra_conf = 0
" 关闭YouCompleteMe得高亮错误，用syntastic的
let g:ycm_show_diagnostics_ui = 0
"let g:ycm_error_symbol = "✗"
"let g:ycm_warning_symbol = "⚠"
let g:ycm_always_populate_location_list = 1
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_key_detailed_diagnostics = '<leader>d'
nnoremap <leader>jd :YcmCompleter GoTo<CR>  " ctrl+o jumpback ctrl+i jumpforward
nnoremap <leader>jf :YcmForceCompileAndDiagnostics<CR>
" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_cache_omnifunc = 0
"在注释输入中也能补全
let g:ycm_complete_in_comments = 1
"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1
"注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0

"let g:ycm_use_ultisnips_completer = 0
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" change complete trigger from <c-j> to <tab>
" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" rainbow
let g:rainbow_active = 1 "0 if you want to enable it later via :RainbowToggle

" numbers
nnoremap <F3> :NumbersToggle<CR>

" VIM 7.3+ has support for highlighting a specified column.
if exists('+colorcolumn')
    set colorcolumn=80
else
    " Emulate
    au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%80v.\+', -1)
endif

" }
